{"version":3,"sources":["theme/index.ts","components/parts/social-icon/index.tsx","components/layouts/Footer/index.tsx","components/layouts/Header/parts/HeaderTitle.tsx","components/layouts/Header/index.tsx","components/layouts/index.tsx","components/parts/dark-mode-toggle-button/index.tsx","components/parts/base-icon-button/index.tsx","features/todo-input-form/index.tsx","features/todo-input-form-mobile-button/index.tsx","features/todo-input-form-modal/index.tsx","features/todo-list-container/components/NoTodoAlert.tsx","features/todo-list-container/index.tsx","hooks/use-todo.ts","App.tsx","index.tsx"],"names":["theme","extendTheme","colors","aobutaTheme","main","purple","blue","lightBlue","SocialIcon","memo","children","href","label","aria-label","variant","isRound","icon","_hover","color","Footer","borderTopColor","useColorModeValue","borderProp","as","justify","align","py","borderTop","fontSize","base","md","Date","getFullYear","HeaderTitle","size","fontWeight","bgGradient","bgClip","Header","maxW","mx","LayoutContainer","h","flexDirection","spacing","DarkModeToggleButton","useColorMode","colorMode","toggleColorMode","position","top","right","zIndex","_active","_focus","boxShadow","onClick","BaseIconButton","type","bg","opacity","TodoInputForm","props","handleAddTodo","input","onSubmit","ref","placeholder","TodoInputFormMobileButton","onOpen","w","bottom","TodoInputFormModal","isOpen","onClose","isCentered","e","NoTodoAlert","status","alignItems","justifyContent","textAlign","height","boxSize","mr","mt","mb","maxWidth","TodoListContainer","todos","handleEditTodoValue","handleToggleIsDone","handleDeleteTodo","length","p","divider","borderRadius","borderColor","borderWidth","map","todo","onChange","id","isDone","target","value","disabled","useTodo","useState","setTodos","useRef","useEffect","current","focus","useCallback","preventDefault","trim","RegExp","test","toast","error","getUniqueId","success","warn","editTodo","newTodo","cpTodo","filter","App","handler","useDisclosure","useMediaQuery","isGreaterThan481","isSmallerThan480","ReactDOM","render","autoClose","limit","document","getElementById"],"mappings":"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","file":"static/js/main.cf0b763d.chunk.js","sourcesContent":["import { extendTheme } from '@chakra-ui/react';\n\nconst theme = extendTheme({\n  // 青ブタのテーマ\n  colors: {\n    aobutaTheme: {\n      main: '#0097e0',\n      purple: '#ae53eb',\n      blue: '#1041fc',\n      lightBlue: '#28c2e6',\n    },\n  },\n});\n\nexport default theme;\n","import { memo, ReactElement, VFC } from 'react';\n\nimport { Link, IconButton } from '@chakra-ui/react';\n\ntype Props = {\n  children: ReactElement;\n  href: string;\n  label: string;\n};\n\nconst SocialIcon: VFC<Props> = memo(({ children, href, label }) => (\n  <Link href={href}>\n    <IconButton\n      aria-label={label}\n      variant='link'\n      isRound\n      icon={children}\n      _hover={{ color: 'black' }}\n    />\n  </Link>\n));\n\nexport default SocialIcon;\n","import { VFC, memo } from 'react';\n\nimport { Flex, HStack, Text, useColorModeValue } from '@chakra-ui/react';\nimport { FaGithub, FaTwitter } from 'react-icons/fa';\n\nimport SocialIcon from 'components/parts/social-icon';\n\nconst Footer: VFC = memo(() => {\n  const borderTopColor = useColorModeValue('#EDF2F7', '#000');\n  const borderProp = `1px solid ${borderTopColor}`;\n\n  return (\n    <Flex\n      as='footer'\n      justify='space-around'\n      align='center'\n      py={3}\n      borderTop={borderProp}\n    >\n      <Text fontSize={{ base: 'xs', md: 'sm' }} color='GrayText'>\n        © {new Date().getFullYear()} kitamuraDev\n      </Text>\n\n      <HStack>\n        <SocialIcon\n          href='https://github.com/kitamuraDev'\n          label='Github link @kitamuraDev'\n        >\n          <FaGithub />\n        </SocialIcon>\n        <SocialIcon\n          href='https://twitter.com/kitamuraDev'\n          label='Twitter link @kitamuraDev'\n        >\n          <FaTwitter />\n        </SocialIcon>\n      </HStack>\n    </Flex>\n  );\n});\n\nexport default Footer;\n","import { ReactNode, VFC } from 'react';\n\nimport { Heading } from '@chakra-ui/react';\n\nconst HeaderTitle: VFC<{ children: ReactNode }> = ({ children }) => (\n  <Heading\n    as='h1'\n    size='2xl'\n    fontWeight='extrabold'\n    bgGradient='linear(90deg, rgba(174,83,235,1) 0%, rgba(16,65,252,1) 35%, rgba(40,194,230,1) 100%)'\n    bgClip='text'\n  >\n    {children}\n  </Heading>\n);\n\nexport default HeaderTitle;\n","import { memo, VFC } from 'react';\n\nimport { Box } from '@chakra-ui/react';\n\nimport HeaderTitle from './parts/HeaderTitle';\n\nconst Header: VFC = memo(() => (\n  <Box as='header' maxW='container.lg' mx='auto'>\n    <HeaderTitle>Todo Application</HeaderTitle>\n  </Box>\n));\n\nexport default Header;\n","import { memo, ReactNode, VFC } from 'react';\n\nimport { Flex, Stack } from '@chakra-ui/react';\n\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst LayoutContainer: VFC<{ children: ReactNode }> = memo(({ children }) => (\n  <Flex h='100vh' flexDirection='column'>\n    <Stack h='full' spacing={5} justify='space-between'>\n      <Header />\n      {children}\n      <Footer />\n    </Stack>\n  </Flex>\n));\n\nexport default LayoutContainer;\n","import { VFC } from 'react';\n\nimport { SunIcon, MoonIcon } from '@chakra-ui/icons';\nimport { IconButton, useColorMode } from '@chakra-ui/react';\n\nconst DarkModeToggleButton: VFC = () => {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  return (\n    <IconButton\n      aria-label='DarkMode Toggle Icon'\n      icon={colorMode === 'light' ? <MoonIcon /> : <SunIcon />}\n      position='fixed'\n      top='24px'\n      right='24px'\n      zIndex={99}\n      isRound\n      // 空{}を渡すことでhoverでは何もしないことになる\n      _hover={{}}\n      _active={{}}\n      _focus={{ boxShadow: 'none' }} // \"box-shadow\"に関しては、明示的に打ち消す\n      onClick={toggleColorMode}\n    />\n  );\n};\n\nexport default DarkModeToggleButton;\n","import { memo, ReactElement, VFC } from 'react';\n\nimport { IconButton } from '@chakra-ui/react';\n\ntype Props = {\n  children: ReactElement;\n  type: 'button' | 'submit' | 'reset';\n  label: string;\n  bg: string;\n};\n\nconst BaseIconButton: VFC<Props> = memo(({ children, type, label, bg }) => (\n  <IconButton\n    aria-label={label}\n    type={type}\n    variant='solid'\n    bg={bg}\n    color='white'\n    _hover={{ opacity: 0.7 }}\n    icon={children}\n  />\n));\n\nexport default BaseIconButton;\n","import { memo, VFC } from 'react';\n\nimport { SmallAddIcon } from '@chakra-ui/icons';\nimport { Box, Container, HStack, Input } from '@chakra-ui/react';\n\nimport BaseIconButton from 'components/parts/base-icon-button';\n\nexport type TodoInputProps = {\n  handleAddTodo: (e: React.FormEvent<HTMLFormElement>) => void;\n  input: React.RefObject<HTMLInputElement>;\n};\n\nconst TodoInputForm: VFC<TodoInputProps> = (props) => {\n  const { handleAddTodo, input } = props;\n\n  return (\n    <Box>\n      <Container maxW='container.sm' mx='auto'>\n        <form onSubmit={handleAddTodo}>\n          <HStack>\n            <Input\n              type='text'\n              ref={input}\n              variant='flushed'\n              placeholder='Write your todo here'\n            />\n            <BaseIconButton\n              type='submit'\n              label='add todo button'\n              bg='aobutaTheme.lightBlue'\n            >\n              <SmallAddIcon />\n            </BaseIconButton>\n          </HStack>\n        </form>\n      </Container>\n    </Box>\n  );\n};\n\nexport default memo(TodoInputForm);\n","import { VFC } from 'react';\n\nimport { SmallAddIcon } from '@chakra-ui/icons';\nimport { IconButton } from '@chakra-ui/react';\n\ntype Props = {\n  onOpen: () => void;\n};\n\nconst TodoInputFormMobileButton: VFC<Props> = ({ onOpen }) => (\n  <IconButton\n    aria-label='add button'\n    icon={<SmallAddIcon color='white' w={8} h={8} />}\n    bg='aobutaTheme.lightBlue'\n    position='fixed'\n    bottom='64px'\n    right='24px'\n    zIndex={99}\n    isRound\n    w={16}\n    h={16}\n    // 空{}を渡すことでhoverでは何もしないことになる\n    _hover={{}}\n    _active={{}}\n    _focus={{ boxShadow: 'none' }} // \"box-shadow\"に関しては、明示的に打ち消す\n    onClick={onOpen}\n  />\n);\n\nexport default TodoInputFormMobileButton;\n","import { VFC, memo } from 'react';\n\nimport { SmallAddIcon } from '@chakra-ui/icons';\nimport {\n  HStack,\n  Input,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalOverlay,\n} from '@chakra-ui/react';\n\nimport BaseIconButton from 'components/parts/base-icon-button';\nimport { TodoInputProps } from 'features/todo-input-form';\n\ntype Props = {\n  isOpen: boolean;\n  onClose: () => void;\n} & TodoInputProps;\n\nconst TodoInputFormModal: VFC<Props> = memo(\n  ({ isOpen, onClose, handleAddTodo, input }) => (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent maxW='container.sm' mx={2}>\n        <ModalBody>\n          <form\n            onSubmit={(e) => {\n              handleAddTodo(e);\n              onClose();\n            }}\n          >\n            <HStack>\n              <Input\n                type='text'\n                ref={input}\n                variant='flushed'\n                placeholder='Write your todo here'\n              />\n              <BaseIconButton\n                type='submit'\n                label='add todo button'\n                bg='aobutaTheme.lightBlue'\n              >\n                <SmallAddIcon />\n              </BaseIconButton>\n            </HStack>\n          </form>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  ),\n);\n\nexport default TodoInputFormModal;\n","import { VFC } from 'react';\n\nimport {\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n} from '@chakra-ui/react';\n\nconst NoTodoAlert: VFC = () => (\n  <Alert\n    status='info'\n    variant='subtle'\n    flexDirection='column'\n    alignItems='center'\n    justifyContent='center'\n    textAlign='center'\n    height='200px'\n  >\n    <AlertIcon boxSize='40px' mr={0} />\n    <AlertTitle mt={4} mb={1} fontSize='lg'>\n      No Task ...\n    </AlertTitle>\n    <AlertDescription maxWidth='sm'>\n      There are no tasks. Please register your task as anything is fine\n    </AlertDescription>\n  </Alert>\n);\n\nexport default NoTodoAlert;\n","import { memo, VFC } from 'react';\n\nimport { DeleteIcon } from '@chakra-ui/icons';\nimport {\n  Box,\n  Container,\n  Stack,\n  StackDivider,\n  HStack,\n  Checkbox,\n  Input,\n  IconButton,\n} from '@chakra-ui/react';\n\nimport { Todo } from 'types/todo';\n\nimport NoTodoAlert from './components/NoTodoAlert';\n\ntype Props = {\n  todos: Todo[];\n  handleEditTodoValue: (id: Todo['id'], editTodo: Todo['value']) => void;\n  handleToggleIsDone: (id: Todo['id'], isDone: Todo['isDone']) => void;\n  handleDeleteTodo: (id: Todo['id']) => void;\n};\n\nconst TodoListContainer: VFC<Props> = (props) => {\n  const { todos, handleEditTodoValue, handleToggleIsDone, handleDeleteTodo } =\n    props;\n\n  return (\n    <Box>\n      <Container maxW='container.md'>\n        {!todos.length ? (\n          <NoTodoAlert />\n        ) : (\n          <Stack\n            as='ul'\n            p={4}\n            spacing={4}\n            divider={<StackDivider />}\n            borderRadius='lg'\n            borderColor='gray.100'\n            borderWidth='2px'\n          >\n            {todos.map((todo) => (\n              <HStack key={todo.id} as='li' spacing='8'>\n                <Checkbox\n                  onChange={() => handleToggleIsDone(todo.id, todo.isDone)}\n                />\n                <Input\n                  onChange={(e) => handleEditTodoValue(todo.id, e.target.value)}\n                  value={todo.value}\n                  disabled={todo.isDone}\n                />\n                <IconButton\n                  aria-label='delete icon'\n                  icon={<DeleteIcon />}\n                  isRound\n                  onClick={() => handleDeleteTodo(todo.id)}\n                />\n              </HStack>\n            ))}\n          </Stack>\n        )}\n      </Container>\n    </Box>\n  );\n};\n\nexport default memo(TodoListContainer);\n","import { useCallback, useEffect, useRef, useState } from 'react';\n\nimport { toast } from 'react-toastify';\nimport { v4 as getUniqueId } from 'uuid';\n\nimport { Handler, Todo } from 'types/todo';\n\nconst useTodo = (): [\n  todos: Todo[],\n  input: React.RefObject<HTMLInputElement>,\n  handler: Handler,\n] => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const input = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    input.current?.focus();\n  }, []);\n\n  const handleAddTodo = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault(); // ページ遷移しないように（本来行われる挙動をキャンセルさせる）\n\n      // 空文字、スペースを含む空文字を許容しない\n      if (!input.current?.value.trim()) {\n        toast.warn('Empty string can not submit');\n        input.current!.value = ''; // eslint-disable-line @typescript-eslint/no-non-null-assertion\n\n        return;\n      }\n\n      // XSSを試された場合の警告\n      if (new RegExp('<script>', 'i').test(input.current.value)) {\n        toast.error('Do not trying to XSS');\n        input.current.value = '';\n\n        return;\n      }\n\n      setTodos([\n        { id: getUniqueId(), value: input.current.value, isDone: false },\n        ...todos,\n      ]);\n\n      toast.success('Success, add Todo');\n      input.current.value = '';\n    },\n    [todos],\n  );\n\n  const handleEditTodoValue = useCallback(\n    (id: Todo['id'], editTodo: Todo['value']) => {\n      const newTodo = todos.map((todo) => {\n        const cpTodo = todo;\n        if (todo.id === id) cpTodo.value = editTodo;\n\n        return cpTodo;\n      });\n\n      setTodos(newTodo);\n    },\n    [todos],\n  );\n\n  const handleToggleIsDone = useCallback(\n    (id: Todo['id'], isDone: Todo['isDone']) => {\n      const newTodo = todos.map((todo) => {\n        const cpTodo = todo;\n        if (todo.id === id) cpTodo.isDone = !isDone;\n\n        return cpTodo;\n      });\n\n      setTodos(newTodo);\n    },\n    [todos],\n  );\n\n  const handleDeleteTodo = useCallback(\n    (id: Todo['id']) => {\n      const newTodo = todos.filter((todo) => todo.id !== id);\n      setTodos(newTodo);\n      toast.success('Success, delete Todo', { icon: '🗑' });\n      input.current?.focus();\n    },\n    [todos],\n  );\n\n  return [\n    todos,\n    input,\n    {\n      handleAddTodo,\n      handleEditTodoValue,\n      handleToggleIsDone,\n      handleDeleteTodo,\n    },\n  ];\n};\n\nexport default useTodo;\n","import { VFC } from 'react';\n\nimport { Box, Spacer, useMediaQuery, useDisclosure } from '@chakra-ui/react';\n\nimport LayoutContainer from 'components/layouts';\nimport DarkModeToggleButton from 'components/parts/dark-mode-toggle-button';\nimport TodoInputForm from 'features/todo-input-form';\nimport TodoInputFormMobileButton from 'features/todo-input-form-mobile-button';\nimport TodoInputFormModal from 'features/todo-input-form-modal';\nimport TodoListContainer from 'features/todo-list-container';\nimport useTodo from 'hooks/use-todo';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst App: VFC = () => {\n  const [todos, input, handler] = useTodo();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [isGreaterThan481] = useMediaQuery('(min-width: 481px)');\n  const [isSmallerThan480] = useMediaQuery('(max-width: 480px)');\n\n  return (\n    <>\n      <DarkModeToggleButton />\n      <Box mt='7rem' />\n      <LayoutContainer>\n        <Box mb='5rem' />\n        <TodoListContainer\n          todos={todos}\n          handleEditTodoValue={handler.handleEditTodoValue}\n          handleToggleIsDone={handler.handleToggleIsDone}\n          handleDeleteTodo={handler.handleDeleteTodo}\n        />\n        <Spacer />\n        {isGreaterThan481 && (\n          <TodoInputForm handleAddTodo={handler.handleAddTodo} input={input} />\n        )}\n        {isSmallerThan480 && <TodoInputFormMobileButton onOpen={onOpen} />}\n        <TodoInputFormModal\n          isOpen={isOpen}\n          onClose={onClose}\n          handleAddTodo={handler.handleAddTodo}\n          input={input}\n        />\n      </LayoutContainer>\n    </>\n  );\n};\n\nexport default App;\n","import { StrictMode } from 'react';\n\nimport { ChakraProvider } from '@chakra-ui/react';\nimport ReactDOM from 'react-dom';\nimport { ToastContainer } from 'react-toastify';\n\nimport theme from 'theme';\n\nimport App from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <ChakraProvider theme={theme}>\n      <App />\n      <ToastContainer position='top-center' autoClose={3000} limit={5} />\n    </ChakraProvider>\n  </StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}